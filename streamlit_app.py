import streamlit as st
from fedstat_api import FedStatIndicator

def reset_blocks(active_block):
    st.session_state.show_block_1 = (active_block == 1)


if "show_block_1" not in st.session_state:
    st.session_state.show_block_1 = False
if "df" not in st.session_state:
     st.session_state.df_men = None


st.set_page_config(page_title="–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏", layout="wide", page_icon="üìä")
st.title("üìä –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π")


if not st.session_state.show_block_1:
    with st.container():
        st.markdown(
            '''
            <p style='font-size:24px;'>–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–∂–Ω–æ:</p>
            <ul style='color: black; font-size: 20px;'>
                <li>–°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞—Å–µ–ª–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–µ–∑–µ –ø–æ–ª–∞ –∏ –≤–æ–∑—Ä–∞—Å—Ç–∞</li>
            </ul>
            <p style='font-size:24px;'>–í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –Ω–∏–∂–µ –ª–∏–±–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏</p>
            ''',
            unsafe_allow_html=True
        )

        prompt = st.chat_input("–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞: –≤—ã–≤–µ–¥–∏ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –º—É–∂—Å–∫–æ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–∏—è —Å 2021 –ø–æ 2025 –ø–æ –æ–¥–Ω–æ–ª–µ—Ç–Ω–∏–º –≥—Ä—É–ø–ø–∞–º")
        if prompt:
            st.write(f"Prompt: {prompt}")

with st.sidebar:
    st.title("üîç –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏")
    if st.button("üìà –ß–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–∏—è", key='button1'):
            reset_blocks(1)

if st.session_state.show_block_1:
    with st.expander("", expanded = True):
        st.markdown(
                "<p style='font-size:22px; font-weight:bold;'>–ß–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–∏—è</p>", 
                unsafe_allow_html=True
            )
        col1, col2 = st.columns(2)
        
        with col1:
            gender = st.selectbox(
                "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª",
                options = ["–ú—É–∂—á–∏–Ω—ã", "–ñ–µ–Ω—â–∏–Ω—ã", "–í—Å–µ"]
            )
        if gender == "–ú—É–∂—á–∏–Ω—ã":
            indicator_id = 31548
        if gender == "–ñ–µ–Ω—â–∏–Ω—ã":
            indicator_id = 33459
        try: 
            population = FedStatIndicator(indicator_id)
        except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

        selectbox_values = population.filter_codes
        options = population.filter_categories
        selected_values = []
        for key, val in selectbox_values.items():
            col1, col2 = st.columns([1, 1])
            sb_options = list(options.get(key).values())
            if len(sb_options) > 1:
                all_options = ["–í—Å–µ"] + sb_options
                with col1:
                    selected = st.multiselect(val, options = all_options, default = all_options[0])
                with col2:
                    if st.button("–í—Å–µ", key = f"selected_{key}"):
                        seletect = all_options[1:]
                        
                if "–í—Å–µ" in selected:
                    selected = sb_options
            else:
                selected.append(sb_options)

        if st.button("–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"):
            with st.spinner("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 10 –º–∏–Ω—É—Ç"):
                st.write(population.get_indicator_title())
                st.session_state.df = population.get_processed_data()
            
            if st.session_state is not None:

                st.dataframe(
                    st.session_state.df.head(10),
                    use_container_width= True,
                    height = 400
                )
